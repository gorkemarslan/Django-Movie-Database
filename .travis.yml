language: python

python:
  - "3.9"

before_install:
  - touch ./DjangoMovieDatabase/.env
  - echo DEBUG="$DEBUG" >> ./DjangoMovieDatabase/.env
  - echo SECRET_KEY="$SECRET_KEY" >> ./DjangoMovieDatabase/.env
  - echo OMDB_API_KEY="$OMDB_API_KEY" >> ./DjangoMovieDatabase/.env
  - echo POSTGRES_HOST="$POSTGRES_HOST" >> ./DjangoMovieDatabase/.env
  - echo POSTGRES_DB="$POSTGRES_DB" >> ./DjangoMovieDatabase/.env
  - echo POSTGRES_USER="$POSTGRES_USER" >> ./DjangoMovieDatabase/.env
  - echo POSTGRES_PASSWORD="$POSTGRES_PASSWORD" >> ./DjangoMovieDatabase/.env
  - echo ALLOWED_HOSTS="$ALLOWED_HOSTS" >> ./DjangoMovieDatabase/.env
  - cat ./DjangoMovieDatabase/.env

services:
  - postgresql

before_script:
  - pip install -r requirements.txt
  - pip install flake8
  - psql -c 'create database "$POSTGRES_DB";' -U postgres

script:
  - python manage.py migrate
  - python manage.py makemigrations
  - python manage.py test && flake8
  - zip -r latest *
  - mkdir -p deploy_cd_upload
  - mv latest.zip deploy_cd_upload/latest.zip

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    local_dir: deploy_cd_upload
    skip_cleanup: true
    on:
      &2
      repo: organization/$REPO_NAME
    bucket: $S3_BUCKET_NAME
    region: $S3_REGION_NAME
  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: $S3_BUCKET_NAME
    key: latest.zip
    bundle_type: zip
    application: $CODE_DEPLOY_APP_NAME
    deployment_group: $CODE_DEPLOY_GROUP_NAME
    region: $DEPLOY_REGION_NAME
    on: *2
